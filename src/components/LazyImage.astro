---
import { Image } from "astro:assets";
import ImageSkeleton from "./ImageSkeleton.astro";

interface Props {
  src: string | ImageMetadata;
  alt: string;
  width?: number | undefined;
  height?: number | undefined;
  class?: string;
  format?: "webp" | "avif" | "png" | "jpg" | "jpeg";
  loading?: "lazy" | "eager";
  fetchpriority?: "high" | "low" | "auto" | undefined;
  rounded?: boolean;
  aspectRatio?: string | undefined;
  skeletonClass?: string;
}

const {
  src,
  alt,
  width,
  height,
  class: className = "",
  format = "webp",
  loading = "lazy",
  fetchpriority,
  rounded = false,
  aspectRatio,
  skeletonClass = ""
} = Astro.props;

const skeletonWidth = width ? `${width}px` : "100%";
const skeletonHeight = height ? `${height}px` : aspectRatio ? "auto" : "200px";
---

<div class="relative" style="display: block; width: 100%; height: 100%;">
  <ImageSkeleton 
    width={skeletonWidth}
    height={skeletonHeight}
    class={`absolute top-0 left-0 w-full h-full z-0 ${skeletonClass}`}
    rounded={rounded}
    aspectRatio={aspectRatio || undefined}
  />
  <Image
    src={src}
    alt={alt}
    width={width || undefined}
    height={height || undefined}
    class={`${className} opacity-0 transition-opacity duration-300 relative z-0`}
    format={format}
    loading={loading}
    fetchpriority={fetchpriority || undefined}
    onload="setTimeout(() => { this.style.opacity = '1'; this.previousElementSibling.style.display = 'none'; }, 500);"
  />
</div>

<script>
  // Fallback for browsers that don't support onload on Image components
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('img[data-astro-src]');
    images.forEach((img) => {
      img.addEventListener('load', () => {
        setTimeout(() => {
          const imgElement = img as HTMLElement;
          imgElement.style.opacity = '1';
          const skeleton = img.previousElementSibling as HTMLElement;
          if (skeleton && skeleton.classList.contains('skeleton-loader')) {
            skeleton.style.display = 'none';
          }
        }, 500);
      });
    });
  });
</script>
